__asm__(
".text \n"
".global _" START "\n"
".global " START "\n"
".global " START "_data\n"
".type   _" START ", @function\n"
".type   " START ", @function\n"
".type   " START "_data, @function\n"
"_" START ":\n"
"" START ":\n"
".align 8 \n"
"	add.w $fp, $r0,$r0 \n"
"	bl 1f \n"
"" START "_data: \n"
".weak _DYNAMIC \n"
".hidden _DYNAMIC \n"
"1:	or $a0, $sp, $zero \n"
"	la.local $a1, _DYNAMIC \n"
"	addi.w $r19, $r0, -16 \n"
"	and $sp, $sp, $r19 \n"
"	la.local $t0," START "_c \n"
"	jirl $t1,$t0,0 \n"
);
